先解構，再賦值
-[陣列:中括號， 物件:大括號]

*陣列的基本解構法
傳統作法為:
let arr=[3,4,5];
let d1=arr[0]; //單獨取出，再放入變數
let d2=arr[1];
let d3=arr[2];

解構賦值的語法:
let arr=[3,4,5];
//直接將各變數都放入中括弧，再用陣列 arr 賦值
let[d1,d2,d3]=arr; //也就是 [d1,d2,d3]=[3,4,5]

*變形寫法1 (宣告與賦值分開)
let arr=[3,4,5]:
let d1,d2,d3; //宣告變數
[d1,d2=2,d3=5]=arr //賦值 ，d2,d3設了預設值，而 d3 沒有值因此若沒有設定預設值，則會顯示 undefined。

======================================================================

*物件的基本解構法
傳統作法: 
let obj=[x:3,y:4];
let x=obj.x;
let y=obj.y; // 

解構賦值語法:
let obj=[x:3,y:4];
let[x,y]=obj;  //按照物件成員名稱做對應

*變形寫法1 (宣告與賦值分開)
let obj=[x:3,y:4];
let x,y; //宣告變數
({x:newX,y=5}=obj); //不和宣告一起執行，要多加()。
// 將 x 取新名子為 newX，y 的預設值為 5。
